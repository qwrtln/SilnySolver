#!/bin/bash

# Some variables to enhance output readability
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
CYAN='\033[1;36m'
NC='\033[0m' # No Color
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
    
CLEAN_BUILD=true

rm -rf build.log qmake.log

mkdir -p .temp
mv *.o *.cpp *.h SilnySolverGUI Makefile .temp/ &>/dev/null

### QMAKE PART
qmake SilnySolverGUI.pro &> qmake.log
if [ -s qmake.log ]
then
    grep -i error qmake.log > .qmakeErr.log
    if [ -s .qmakeErr.log ]
    then
        echo -e "\n" 
        grep --color -i error qmake.log
        rm -rf .qmakeErr.log # remove in case of aborting
        echo -e "\nQmake encountered ${RED}errors${NC} while producing Makefile. See ${BOLD}qmake.log${NORMAL} file for details. Please ${BOLD}correct them${NORMAL} before you continue."
        CLEAN_BUILD=false
    else 
        # Check for warnings only if there are no errors
        grep -i warning qmake.log > .qmakeWar.log
        if [ -s .qmakeWar.log ]
        then 
            echo -e "\n" 
            grep --color -i warning qmake.log
            rm -rf .qmakeWar.log .qmakeErr.log # remove in case of aborting
            echo -e "\nQmake finished with ${YELLOW}warnings${NC} listed above. See qmake.log file for details."
            CLEAN_BUILD=false
        fi
    fi
else
    rm -rf qmake.log .qmakeErr.log &>/dev/null # deleting empty files
    echo -e "Qmake process went ${GREEN}fine${NORMAL}."
fi

if [ "$CLEAN_BUILD" = false ]
then
    rm Makefile &>/dev/null
    mv .temp/* . &>/dev/null
    rm -rf .temp &>/dev/null
    exit 1 # A non-zero exit aborts push
fi

### MAKEFILE PART
make 2> build.log
if [ -s build.log ]
then
    grep -i error build.log > .buildErr.log
    if [ -s .buildErr.log ]
    then
        echo -e "\n" 
        grep --color -i error build.log
        rm -rf .buildErr.log # remove in case of aborting
        echo -e "\nDelivery check finished with ${RED}compilation errors${NC} listed above. See ${BOLD}build.log${NORMAL} file for details. Please ${BOLD}correct them${NORMAL} before you continue."
        CLEAN_BUILD=false
    else 
        # Check for warnings only if there are no errors
        grep -i warning build.log > .buildWar.log
        if [ -s .buildWar.log ]
        then 
            echo -e "\n" 
            grep --color -i warning build.log
            rm -rf .buildWar.log .buildErr.log # remove in case of aborting
            echo -e "\nDelivery check finished with ${YELLOW}WARNINGS${NC} listed above. See build.log file for details."
            CLEAN_BUILD=false
        fi
    fi
else
    rm -rf build.log .buildErr.log &>/dev/null # in this case those files are no longer needed
    echo -e "\nThe code is ${CYAN}pristine${NC}!"
fi

make clean &>/dev/null # clean up
rm Makefile SilnySolverGUI &>/dev/null

mv .temp/* . &>/dev/null
rm -rf .temp &>/dev/null

if [ "$CLEAN_BUILD" = true ]
then
    exit 0
else
    exit 1 # A non-zero exit aborts push
fi

